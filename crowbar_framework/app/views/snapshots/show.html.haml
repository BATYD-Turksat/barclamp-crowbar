- state = @snapshot.state rescue Snapshot::ERROR
%table{:width=>'100%'}
  %tr
    %td
      .led{:class => Snapshot::STATES[state], :title=>Snapshot.state_name(state)}
    %td
      %h1
        = link_to @snapshot.deployment.name, deployment_path(@snapshot.deployment.id)
        = @snapshot.state_name(state)
    - if state == Snapshot::PROPOSED
      %td
        = form_for :deployment, :'data-remote' => true, :url => deployment_roles_path(:deployment_id=>@snapshot.deployment.id, :version=>'v2'), :html => { :method=>:post, :'data-type' => 'html',  :class => "formtastic" } do |f|
          - aroles = @snapshot.deployment.available_roles
          - if aroles.length > 0 
            = hidden_field_tag :snapshot_id, @snapshot.id
            = f.collection_select :role_id, aroles, :id, :name
            %input.button{:type => "submit", :name => "add", :value => t('.add_role')}
      %td= link_to t('.pick'), bulk_edit_path(), :title=>t('.pick_hint'), :class=>'button'
    - else
      %td= link_to t('.graph'), snapshot_graph_path(@snapshot.id), :class => 'button', :method=>:get
    %td= render :partial => 'deployments/buttons', :locals => { :state=>state, :snapshot=>@snapshot } 

%table.snap{:align=>'center'}
  - if @nodes.count > 0 and @barclamps.count > 0
    %thead
      %tr
        %th.anode{:rowspan=>2}= link_to t('.nodes'), bulk_edit_path()
        - @barclamps.each do |bc_id, barclamp|
          -if barclamp[:roles]
            %th.role{:colspan=>barclamp[:roles].count}= link_to barclamp[:barclamp].name, barclamp_path(bc_id), :title=>barclamp[:barclamp].description
      %tr
        - @barclamps.each do |bc_id, barclamp|
          - if barclamp[:roles] 
            - barclamp[:roles].each do |dr|
              %th.dr{:id=>dr.id}
                - name = dr.role.name[/^#{barclamp[:barclamp].name}-(.*)/,1]
                = link_to (name || dr.role.name), deployment_role_path(dr.id), :title=>dr.role.description
    %tbody
      - @nodes.each do |nid, node|
        %tr.node{:id => nid}
          %td.nodename= link_to node.alias, node_path(nid), :title=>node.description
          -@barclamps.each do |bc_id, barclamp|
            - if barclamp[:roles]
              - barclamp[:roles].each do |dr|
                - nr = @node_roles[nid][bc_id][dr.role.id] rescue nil
                %td.noderole{:id=>(nr ? nr.id : -1), :dr=>dr.id}
                  - if nr
                    %span{:style=>"float:left; display:inline", :align=>'center'}
                      .led{:class => NodeRole::STATES[nr.state || NodeRole::ERROR], :title=>nr.role.name}
                        = link_to "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;".html_safe, node_role_path(nr.id)
                  - elsif state == Snapshot::PROPOSED
                    %span{:style=>"display:none"}
                      = link_to image_tag('/images/icons/add.png'), node_roles_path(:snapshot_id=>@snapshot.id, :node_id=>nid, :role_id=>dr.role.id), :method=>:post
  - else
    %tr
      %td= t 'no_items'

.clear

:javascript

    function update() {
      $.ajaxSetup({ timeout: 1000 });
      if (#{state != Snapshot::PROPOSED}) {
        location.reload();
      }
    };
  
  $(document).ready(function() {
  
    // set hover showing
    $('td.noderole')
      .bind('hover',
        function( ev ) {
          id = $(this).attr("id")
          dr = $(this).attr("dr");
          if (id == -1) {
            if (ev['type']=="mouseenter")
              { $(this).children().show();  
                // $("td.dr#"+dr).css("font-weight","italic"); 
              }
            else if (ev['type']=="mouseleave")
              { $(this).children().hide(); 
                // $("td.dr#"+dr).css("font-weight","normal"); 
              }
          }
        }
      );
  });